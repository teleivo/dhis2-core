name: Test
env:
  # This is to make sure Maven don't timeout fetching dependencies. See: https://github.com/actions/virtual-environments/issues/1499
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=125

on: [ pull_request ]
concurrency:
    group: ${{ github.workflow}}-${{ github.ref }}
    cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: zulu
          cache: maven
      - name: Build
        # TODO add formatting check in build step or own step
        # TODO we create multiple wars, should we only upload dhis.war?
        # TODO investigate if there are jars/wars which we should not upload
        # Build everything? also jetty?; do not run or compile tests that will
        # be done in test jobs
        run: mvn clean package --threads 1C --batch-mode --no-transfer-progress -DskipTests -Dmaven.test.skip=true --file ./dhis-2/pom.xml
      - name: Upload jars
        uses: actions/upload-artifact@v2
        with:
          name: jars
          path: |
            **/target/**/*.jar
            **/target/**/dhis.war
            !**/lib/**/*.jar
          retention-days: 1
          if-no-files-found: error

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: zulu
          cache: maven
      - name: Download jars
        id: download-jars
        uses: actions/download-artifact@v2
        with:
          name: jars
          path: jars
      - name: 'ls download path'
        run: ls -R jars
      - name: Install jars
        # TODO install all jars
        working-directory: jars
        run: find . -type f -name "*.jar" -exec mvn install:install-file -Dfile={} -Dpackaging=jar \;
      - name: Test
        run: mvn test --batch-mode --no-transfer-progress --file ./dhis-2/pom.xml --projects -dhis-web-embedded-jetty
